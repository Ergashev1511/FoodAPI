// <auto-generated />
using System;
using FoodAPI.Data.dbcontext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FoodAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FoodAPI.Models.Entity.Foods.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IsCreated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("mail")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("foods");
                });

            modelBuilder.Entity("FoodAPI.Models.Entity.Orders.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("IsCreated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("order");
                });

            modelBuilder.Entity("FoodAPI.Models.Entity.Orders.OrderInFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("IsCreated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("foodsId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("foodsId");

                    b.ToTable("orderInFoods");
                });

            modelBuilder.Entity("FoodAPI.Models.Entity.Tables.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IsCreated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("orderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("orderId");

                    b.ToTable("tables");
                });

            modelBuilder.Entity("FoodAPI.Models.Entity.Orders.OrderInFood", b =>
                {
                    b.HasOne("FoodAPI.Models.Entity.Orders.Order", null)
                        .WithMany("orderInFoods")
                        .HasForeignKey("OrderId");

                    b.HasOne("FoodAPI.Models.Entity.Foods.Food", "foods")
                        .WithMany()
                        .HasForeignKey("foodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("foods");
                });

            modelBuilder.Entity("FoodAPI.Models.Entity.Tables.Table", b =>
                {
                    b.HasOne("FoodAPI.Models.Entity.Orders.Order", "order")
                        .WithMany()
                        .HasForeignKey("orderId");

                    b.Navigation("order");
                });

            modelBuilder.Entity("FoodAPI.Models.Entity.Orders.Order", b =>
                {
                    b.Navigation("orderInFoods");
                });
#pragma warning restore 612, 618
        }
    }
}
